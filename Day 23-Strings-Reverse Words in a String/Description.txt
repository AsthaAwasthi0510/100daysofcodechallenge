TOPIC: STRINGS
SUB TOPIC: REVERSE WORDS IN A STRING
LANGUAGE USED: JAVA

Given an input string s, reverse the order of the words.
A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.
Return a string of the words in reverse order concatenated by a single space.
Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words.
Do not include any extra spaces.

***TEST CASES***
TEST CASE 1:
Input: s = "the sky is blue"
Output: "blue is sky the"

TEST CASE 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.

TEST CASE 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 

***CONSTRAINTS***

1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.

SOLUTION APPROACH:
Step 1 : Trim Original String as Asked in question
Step 2 : Make a String Array , put words of string in String Array using split method.
Step 3 : reverse String Array
Step 4 : Return a string of the words in reverse order concatenated by a single space. Convert String Array back to string using Join Operator
// NOTE: for reversing the array herer we can also use Collections.reverse(Arrays.asList(words)) but from interview point of view this is better

join() : The join() method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator.

trim() : The trim() method in Java String is a built-in function that eliminates leading and trailing spaces

split("\s") or split(" +") : It will remove multiple white spaces from string
