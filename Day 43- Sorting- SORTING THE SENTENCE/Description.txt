📌 TOPIC: SORTING
📌 SUB TOPIC: SORTING THE SENTENCE
📌 LANGUAGE USED: JAVA

A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.
A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.
For example, the sentence "This is a sentence" can be shuffled as "sentence4 a3 is2 This1" or "is2 sentence4 This1 a3".
Given a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.

📌 TEST CASES

📍 TEST CASE 1:
• Input: s = "is2 sentence4 This1 a3"
• Output: "This is a sentence"
• Explanation: Sort the words in s to their original positions "This1 is2 a3 sentence4", then remove the numbers.

📍 TEST CASE 2:
• Input: s = "Myself2 Me1 I4 and3"
• Output: "Me Myself and I"
• Explanation: Sort the words in s to their original positions "Me1 Myself2 and3 I4", then remove the numbers.

📌 CONSTRAINTS:
• 2 <= s.length <= 200
• s consists of lowercase and uppercase English letters, spaces, and digits from 1 to 9.
• The number of words in s is between 1 and 9.
• The words in s are separated by a single space.
• s contains no leading or trailing spaces.

📌 SOLUTION APPROACH:
Section 1
Use stringstream to extract words from s in a string word. Say word = "football3". Use this word to make a pair <int, string> where int is the sequence number at which the word in supposed to be in original sentence and string is the word after removing the number at the end of it. Then push this pair in a vector sent.
After doing the same for all the words, sent vector contains [{3, "football"}, {1, "I"}, {2, "love"}]

Section 2
The sort function sorts the vector sent on the basis of the sequence number i.e. first element of each pair in sent
After this sent vector contains [{1, "I"}, {2, "love"}, {3, "football"}]

Section 3
Now that we have the original sentence in the required order, we just have to make a string ans that has the string contents of all the pair in vector sent. Also we add a space " " after every word other than the last one.
