#Algorithm
#Language Used= JAVA
#Time complexity= O(n)

class Solution {
    public int maxArea(int[] height) {
        int left = 0, right = height.length - 1;
        int lmax = 0, rmax= 0;
        
        int res = 0;
        while (left < right) {
            lmax = Math.max(height[left], lmax);
            rmax = Math.max(height[right], rmax);
            
            if (lmax < rmax) {
                res = Math.max(res, (right - left) * lmax);
                left++;
            } else {
                res = Math.max(res, (right - left) * rmax);
                right--;
            }
        }
        return res;
    }
}
