📌 TOPIC: SORTING
📌 SUB TOPIC: MINIMUM SUM OF FOUR DIGIT NUMBER AFTER SPLITTING DIGITS
📌 LANGUAGE USED: JAVA

You are given a positive integer num consisting of exactly four digits. Split num into two new integers new1 and new2 by using the digits found in num. 
Leading zeros are allowed in new1 and new2, and all the digits found in num must be used.
For example, given num = 2932, you have the following digits: two 2's, one 9 and one 3. Some of the possible pairs [new1, new2] are [22, 93], [23, 92], [223, 9] and [2, 329].
Return the minimum possible sum of new1 and new2.

📌 TEST CASES

📍 TEST CASE 1:
• Input: num = 2932
• Output: 52
• Explanation: Some possible pairs [new1, new2] are [29, 23], [223, 9], etc. The minimum sum can be obtained by the pair [29, 23]: 29 + 23 = 52.

📍 TEST CASE 2:
• Input: num = 4009
• Output: 13
• Explanation: Some possible pairs [new1, new2] are [0, 49], [490, 0], etc. The minimum sum can be obtained by the pair [4, 9]: 4 + 9 = 13.

📌 CONSTRAINTS:
• 1000 <= num <= 9999

📌 SOLUTION APPROACH
• We do not need to generate all possible combinations of spliting the input into two numbers. In the ideal solution, num1 and num2 will always be of equal length.
• We will step by step build num1 and num2 as we go through the algorithm. It is not necessary to generate all combinations of num1 and num2 (with both numbers having equal length).
• We do not need to save num1 and num2 in a variable. We can keep adding to the total sum as we go through the algorithm.
• The algorithm below works for any input length. If you want you can simplify it, since you know the input length is 4.
